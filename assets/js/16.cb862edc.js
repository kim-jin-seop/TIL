(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{425:function(n,t,a){"use strict";a.r(t);var s=a(56),e=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"jpa-단방향-연관관계"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jpa-단방향-연관관계"}},[n._v("#")]),n._v(" JPA 단방향 연관관계")]),n._v(" "),a("p",[n._v("JPA에서 연관관계가 필요한 이유는 RDB를 좀 더 객체적으로 표현하기 위해서이다."),a("br"),n._v("\n연관관계를 설정해줌으로써 외래키로 연결하는 것이 아니라, 객체를 넣어줄 수 있게 된다.")]),n._v(" "),a("p",[n._v("단방향 연관관계는 RDB에서 1:n의 관계에서 나타날 수 있다."),a("br"),n._v("\n축구 팀과 팀에대한 선수들이 있다면, 선수와 팀은 n:1이 된다."),a("br"),n._v("\n팀에서는 선수에 대한 외래키 정보를 가지고 있지 않지만, 선수는 팀에 대한 외래키를 보유한다.")]),n._v(" "),a("p",[n._v("객체적으로 넣어주기 위해서는 그 "),a("strong",[n._v("객체와의 관계")]),n._v("와 "),a("strong",[n._v("조인하는 칼럼")]),n._v("만 표시해주면 된다.")]),n._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@Entity")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("public")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Player")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),n._v("\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@ManyToOne")]),n._v("\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[n._v("@JoinColumn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[n._v('"TEME_ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("private")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[n._v("Team")]),n._v(" team"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("p",[n._v("@JoinColumn으로 조인하는 객체의 키값을 넣어주면 된다."),a("br"),n._v("\n그리고 관계를 넣어주어야 하는데 Team이 1 Player가 n 이므로 @ManyToOne 관계임을 알 수 있다."),a("br"),n._v("\n이렇게 선수쪽에서만 연결되는 관계를 단방향 연관관계라고 한다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);
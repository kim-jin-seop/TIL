(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{430:function(t,n,e){"use strict";e.r(n);var s=e(56),a=Object(s.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"biginteger-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biginteger-class"}},[t._v("#")]),t._v(" BigInteger Class")]),t._v(" "),e("h2",{attrs:{id:"biginteger-class의-범위는"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biginteger-class의-범위는"}},[t._v("#")]),t._v(" BigInteger Class의 범위는?")]),t._v(" "),e("p",[t._v("Big Integer의 클래스의 범위는 무한대다. 예전에 자료구조 수업을 처음 들을 때 첫 과제가 BigInt라는 자료형을 만들어보는 문제였는데, 그게 사실 Java에서 지원해주는 api인지 몰랐다. 원리는 String형으로 어떻게 처리를 해주기 때문에 무한이 될 수 있다. 하지만, 문자열에 대한 연산은 속도가 느릴 수 있기 때문에 왠만하면 사용을 안하는 것을 권장한다.")]),t._v(" "),e("h2",{attrs:{id:"biginteger의-생성과-변환"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biginteger의-생성과-변환"}},[t._v("#")]),t._v(" BigInteger의 생성과 변환")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('BigInteger bigInt = new BigInteger("100");\n\nint bigIntToInteger = bigInt.intValue();\nlong bigIntToLong = bigInt.longValue();\nfloat bigIntToFloat = bigInt.floatValue();\ndouble bigIntToDouble = bigInt.doubleValue(); \nString bigIntToString = bigInt.toString();\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("BigInteger의 생성자에 문자열을 넣어주면 된다. 문자열로 숫자를 이렇게 넣어주면 생성할 수 있다.")]),t._v(" "),e("p",[t._v("그리고 사용한 BigInteger는 정수형, 실수형 그리고 문자열로 변환이 가능하다.")]),t._v(" "),e("h2",{attrs:{id:"biginteger의-연산"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#biginteger의-연산"}},[t._v("#")]),t._v(" BigInteger의 연산")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('BigInteger bigIntA = new BigInteger("12");\nBigInteger bigIntB = new BigInteger("10");\nbigIntA.add(bigIntB); // 덧셈\nbigIntA.subtract(bigIntB); // 뺄셈\nbigIntA.multiply(bigIntB); // 곱셈\nbigIntA.divide(bigIntB); // 나눗셈\nbigIntA.remainder(bigIntB); // 나눗셈\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[t._v("사칙연산과 mod연산까지 수행할 수 있다. 사용하는 방법은 위와 같으며 메소드의 결과값이 연산의 결과가 된다.")])])}),[],!1,null,null,null);n.default=a.exports}}]);